name: NPM Publish

on:
  push:
    tags:
      - 'v*' # 触发条件：推送以 v 开头的标签

permissions:
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
      - name: Update version in files
        run: |
          # 更新 package.json 版本
          npm version ${{ steps.get_version.outputs.VERSION }} --no-git-tag-version

          # 更新 package-lock.json 中 @becrafter/prompt-manager 包的版本
          sed -i "s/\"name\": \"@becrafter\/prompt-manager\",[[:space:]]*\"version\": \"[^\"]*\"/\"name\": \"@becrafter\/prompt-manager\",\n      \"version\": \"${{ steps.get_version.outputs.VERSION }}\"/g" package-lock.json
          
          # 更新桌面应用的 package.json 和 package-lock.json 版本
          sed -i "s/\"version\": \"[^\"]*\"/\"version\": \"${{ steps.get_version.outputs.VERSION }}\"/" app/desktop/package.json
          # sed -i "s/\"name\": \"@becrafter\/prompt-desktop\",[[:space:]]*\"version\": \"[^\"]*\"/\"name\": \"@becrafter\/prompt-desktop\",\n      \"version\": \"${{ steps.get_version.outputs.VERSION }}\"/g" app/desktop/package-lock.json


          # 更新 env.example 中的版本
          sed -i "s/MCP_SERVER_VERSION=.*/MCP_SERVER_VERSION=${{ steps.get_version.outputs.VERSION }}/" env.example

          # 更新 README.md 中的版本信息
          sed -i "s/| \`MCP_SERVER_VERSION\` | 服务器版本 | \`.*\` |/| \`MCP_SERVER_VERSION\` | 服务器版本 | \`${{ steps.get_version.outputs.VERSION }}\` |/" README.md

          # 更新 config.js 中的默认版本（使用双引号避免单引号嵌套问题）
          sed -i "s/this\.serverVersion = process\.env\.MCP_SERVER_VERSION || '[^']*';/this.serverVersion = process.env.MCP_SERVER_VERSION || '${{ steps.get_version.outputs.VERSION }}';/g" packages/server/config.js

      - name: Update version with jq
        run: |
          sudo apt-get install -y jq
          NEW_VERSION=${{ steps.get_version.outputs.VERSION }}
          jq --arg v "$NEW_VERSION" \
            '.version = $v | .packages."".version = $v' \
            app/desktop/package-lock.json > tmp.json
          mv tmp.json app/desktop/package-lock.json
          echo "Updated to version $NEW_VERSION"

          echo "After update 1:"
          grep -A 2 '"name": "@becrafter/prompt-desktop"' app/desktop/package-lock.json

      - name: Commit version updates
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add package.json package-lock.json env.example README.md packages/server/config.js app/desktop/package.json app/desktop/package-lock.json
          git commit -m "chore: update version to ${{ steps.get_version.outputs.VERSION }}" || echo "No changes to commit"
          git push origin HEAD:main
      
      - name: Cleanup temporary files
        run: |
          rm -f *.bak *.tmp
      
      - name: Publish to NPM
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}